SELECT * FROM DEPT;
SELECT * FROM PERSON;

--PART A
--1. Find all persons with their department name & code.
	SELECT PERSON.PERSONNAME , DEPT.DEPARTMENTNAME , DEPT.DEPARTMENTCODE FROM PERSON 
	LEFT OUTER JOIN DEPT ON PERSON.DEPARTMENTID = DEPT.DEPATRTMENTID;
--2. Find the person's name whose department is in C-Block.
	SELECT PERSON.PERSONNAME FROM PERSON
	INNER JOIN DEPT ON PERSON.DEPARTMENTID = DEPT.DEPATRTMENTID 
	WHERE DEPT.LOCATION = 'C-BLOCK'; 
--3. Retrieve person name, salary & department name who belongs to Jamnagar city.
	SELECT PERSON.PERSONNAME , PERSON.SALARY , DEPT.DEPARTMENTNAME FROM PERSON
	INNER JOIN DEPT ON PERSON.DEPARTMENTID = DEPT.DEPATRTMENTID WHERE PERSON.CITY = 'JAMNAGAR';
--4. Retrieve person name, salary & department name who does not belong to Rajkot city.
	SELECT PERSON.PERSONNAME , PERSON.SALARY , DEPT.DEPARTMENTNAME FROM PERSON
	INNER JOIN DEPT ON PERSON.DEPARTMENTID = DEPT.DEPATRTMENTID WHERE PERSON.CITY <> 'RAJKOT';
--5. Retrieve person’s name of the person who joined the Civil department after 1-Aug-2001.
	SELECT PERSON.PERSONNAME FROM PERSON
	INNER JOIN DEPT ON PERSON.DEPARTMENTID = DEPT.DEPATRTMENTID 
	WHERE DEPT.DEPARTMENTNAME = 'CIVIL' AND PERSON.JOININGDATE > '2001-08-01';
--6. Find details of all persons who belong to the computer department.
	SELECT * FROM PERSON INNER JOIN DEPT ON
	PERSON.DEPARTMENTID = DEPT.DEPATRTMENTID WHERE DEPT.DEPARTMENTNAME = 'COMPUTER';
--7. Display all the person's name with the department whose joining date difference with the current date 
--is more than 365 days.
	SELECT PERSON.PERSONNAME , DEPT.DEPARTMENTNAME FROM PERSON
	INNER JOIN DEPT ON PERSON.DEPARTMENTID = DEPT.DEPATRTMENTID 
	WHERE DATEDIFF(DAY , PERSON.JOININGDATE, GETDATE())>365; 
--8. Find department wise person counts.
	SELECT COUNT(PERSON.PERSONID) , DEPT.DEPARTMENTNAME FROM PERSON
	INNER JOIN DEPT ON PERSON.DEPARTMENTID = DEPT.DEPATRTMENTID 
	GROUP BY DEPT.DEPARTMENTNAME;
--9. Give department wise maximum & minimum salary with department name.
	SELECT MAX(PERSON.SALARY) , MIN(PERSON.SALARY) , DEPT.DEPARTMENTNAME FROM PERSON
	INNER JOIN DEPT ON PERSON.DEPARTMENTID = DEPT.DEPATRTMENTID
	GROUP BY DEPT.DEPARTMENTNAME;
--10. Find city wise total, average, maximum and minimum salary.
	SELECT PERSON.CITY , SUM(PERSON.SALARY) AS TOTAL_SALARY , AVG(PERSON.SALARY) AS AVERAGE_SALARY ,  MAX(PERSON.SALARY) AS MAX_SALARY , MIN(PERSON.SALARY) AS MIN_SALARY 
	FROM PERSON 
	GROUP BY PERSON.CITY
--11. Find the average salary of a person who belongs to Ahmedabad city.
	SELECT AVG(SALARY) AS AVG_SALARY FROM PERSON WHERE CITY = 'AHEMDABAD';
--12. Produce Output Like: <PersonName> lives in <City> and works in <DepartmentName> Department. (In 
--single column)
	SELECT PERSON.PERSONNAME + 'LIVES IN' + PERSON.CITY + ' AND WORKS IN' + DEPT.DEPARTMENTNAME + 'DEPARTMENT' AS SINGLE_LINE_QUERY
	FROM PERSON JOIN DEPT ON PERSON.DEPARTMENTID = DEPT.DEPATRTMENTID;

--PART B
--1. Produce Output Like: <PersonName> earns <Salary> from <DepartmentName> department monthly. (In 
--single column)
	SELECT PERSON.PERSONNAME + 'EARNS  ' + CAST(PERSON.SALARY AS VARCHAR) + ' FROM ' + DEPT.DEPARTMENTNAME + 'DEPARTMENT MONTHLY.' AS SINGLE_LINE_QUERY
	FROM PERSON JOIN DEPT ON PERSON.DEPARTMENTID = DEPT.DEPATRTMENTID;

--2. Find city & department wise total, average & maximum salaries.
	SELECT PERSON.CITY , DEPT.DEPARTMENTNAME , SUM(PERSON.SALARY) AS TOTAL_SALARY , AVG(PERSON.SALARY) AS AVERAGE_SALARY ,  MAX(PERSON.SALARY) AS MAX_SALARY
	FROM PERSON INNER JOIN DEPT ON PERSON.DEPARTMENTID = DEPT.DEPATRTMENTID
	GROUP BY PERSON.CITY , DEPT.DEPARTMENTNAME;
--3. Find all persons who do not belong to any department.
	SELECT * FROM PERSON LEFT OUTER JOIN DEPT ON 
	PERSON.DEPARTMENTID = DEPT.DEPATRTMENTID 
	WHERE DEPT.DEPARTMENTNAME IS NULL;
--4. Find all departments whose total salary is exceeding 100000.
	SELECT DEPT.DEPARTMENTNAME , SUM(PERSON.SALARY) FROM DEPT LEFT OUTER JOIN PERSON ON PERSON.DEPARTMENTID = DEPT.DEPATRTMENTID
	GROUP BY DEPT.DEPARTMENTNAME 
	HAVING SUM(PERSON.SALARY)>100000


--PART C
--1. List all departments who have no person.
	SELECT DEPT.DEPARTMENTNAME FROM DEPT LEFT JOIN PERSON ON PERSON.DEPARTMENTID = DEPT.DEPATRTMENTID
	WHERE PERSON.PERSONID IS NULL;
--2. List out department names in which more than two persons are working.
	SELECT DEPT.DEPARTMENTNAME , COUNT(PERSON.PERSONID) FROM PERSON INNER JOIN DEPT ON PERSON.DEPARTMENTID = DEPT.DEPATRTMENTID
	GROUP BY DEPT.DEPARTMENTNAME
	HAVING COUNT(PERSON.PERSONID)>2
--3. Give a 10% increment in the computer department employee’s salary. (Use Update)
	UPDATE PERSON
	SET PERSON.SALARY = PERSON.SALARY + (0.1 * PERSON.SALARY)
	FROM PERSON JOIN DEPT ON PERSON.DEPARTMENTID = DEPT.DEPATRTMENTID
	WHERE DEPT.DEPARTMENTNAME = 'COMPUTER';